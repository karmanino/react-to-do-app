{"version":3,"sources":["components/08-useReducer/toDoReducer.js","components/08-useReducer/TodoApp.js","hooks/useForm.js","index.js"],"names":["toDoReducer","state","action","type","payload","filter","todo","id","map","done","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","todos","dispatch","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","useEffect","setItem","stringify","length","className","i","onClick","todoId","desc","onSubmit","e","preventDefault","trim","newToDo","Date","getTime","placerholder","autoComplete","onChange","ReactDOM","render","document","getElementById"],"mappings":"8LAAaA,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACjD,OAAQA,EAAOC,MACb,IAAK,MACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAE3B,IAAK,SACH,OAAOH,EAAMI,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOL,EAAOE,OAA7B,IAEtB,IAAK,SACH,OAAOH,EAAMO,KAAI,SAACF,GAAD,OACfA,EAAKC,KAAOL,EAAOE,QAAnB,2BAAkCE,GAAlC,IAAwCG,MAAOH,EAAKG,OAASH,CAD9C,IAInB,QACE,OAAOL,EAEZ,E,eCXKS,EAAO,WACX,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,EACrD,EAEYC,EAAU,WACrB,MAA0BC,qBAAWhB,EAAa,GAAIU,GAAtD,mBAAOO,EAAP,KAAcC,EAAd,KAEA,ECVqB,WAAwB,IAAvBC,EAAsB,uDAAP,CAAC,EACtC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAaA,MAAO,CAACD,EAPkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAC3BD,EAAU,2BACLD,GADI,kBAENE,EAAOC,KAAOD,EAAOE,QAEzB,EATa,WACZH,EAAUH,EACX,EAUF,CDLqDO,CAAQ,CAC1DC,YAAa,KADf,mBAASA,EAAT,KAASA,YAAeC,EAAxB,KAA2CC,EAA3C,KAIAC,qBAAU,WACRjB,aAAakB,QAAQ,QAASpB,KAAKqB,UAAUf,GAC9C,GAAE,CAACA,IAsCJ,OACE,gCACE,4CACY,sCAASA,EAAMgB,OAAf,UAEZ,uBACA,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,8BAAd,SACGjB,EAAMT,KAAI,SAACF,EAAM6B,GAAP,OACT,qBAAkBD,UAAU,kBAA5B,UACE,oBACEA,UAAS,UAAK5B,EAAKG,MAAQ,YAC3B2B,QAAS,kBAzCHC,EAyCsB/B,EAAKC,QAxC/CW,EAAS,CACPf,KAAM,SACNC,QAASiC,IAHQ,IAACA,CAyCG,EAFX,UAIGF,EAAI,EAJP,KAIY7B,EAAKgC,KAJjB,MAI0BhC,EAAKC,MAE/B,wBACE2B,UAAU,iBACVE,QAAS,kBAvDHC,EAuDsB/B,EAAKC,QAlD/CW,EAJe,CACbf,KAAM,SACNC,QAASiC,IAHQ,IAACA,CAuDG,EAFX,sBAPO/B,EAAKC,GADL,QAkBf,sBAAK2B,UAAU,QAAf,UACE,2CACA,uBACA,uBAAMK,SAnDO,SAACC,GAEpB,GADAA,EAAEC,mBACEd,EAAYe,OAAOT,QAAU,GAAjC,CAIA,IAAMU,EAAU,CACdpC,IAAI,IAAIqC,MAAOC,UACfP,KAAMX,EACNlB,MAAM,GAQRS,EALe,CACbf,KAAM,MACNC,QAASuC,IAIXd,GAdC,CAeF,EAgCO,UACE,uBACE1B,KAAK,OACLqB,KAAK,cACLsB,aAAa,UACbC,aAAa,MACbb,UAAU,eACVc,SAAUpB,EACVH,MAAOE,IAET,wBACExB,KAAK,SACL+B,UAAU,yCAFZ,4BAWX,EE3FDe,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,Q","file":"static/js/main.a934f05b.chunk.js","sourcesContent":["export const toDoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n\r\n    case \"delete\":\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { toDoReducer } from \"./toDoReducer\";\r\nimport \"./styles.css\";\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n  const [todos, dispatch] = useReducer(toDoReducer, [], init);\r\n\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const handleDelete = (todoId) => {\r\n    const action = {\r\n      type: \"delete\",\r\n      payload: todoId,\r\n    };\r\n    dispatch(action);\r\n  };\r\n\r\n  const handleToggle = (todoId) => {\r\n    dispatch({\r\n      type: \"toggle\",\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (description.trim().length <= 1) {\r\n      return;\r\n    }\r\n\r\n    const newToDo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false,\r\n    };\r\n\r\n    const action = {\r\n      type: \"add\",\r\n      payload: newToDo,\r\n    };\r\n\r\n    dispatch(action);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        To-Do App <small>({todos.length})</small>\r\n      </h1>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <ul className=\"list-group list-group-flush\">\r\n            {todos.map((todo, i) => (\r\n              <li key={todo.id} className=\"list-group-item\">\r\n                <p\r\n                  className={`${todo.done && \"complete\"}`}\r\n                  onClick={() => handleToggle(todo.id)}\r\n                >\r\n                  {i + 1}. {todo.desc} - {todo.id}\r\n                </p>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => handleDelete(todo.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <h4>Add To-Do</h4>\r\n          <hr />\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              placerholder=\"Tarea..\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control\"\r\n              onChange={handleInputChange}\r\n              value={description}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-primary mt-1 btn-block\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { TodoApp } from \"./components/08-useReducer/TodoApp\";\n// import { CallbackHook } from \"./components/06-memos/CallbackHook.js\";\n//import { Padre } from \"./components/07-tarea-memo/Padre.js\";\n// import { MemoHook } from \"./components/06-memos/MemoHook.js\";\n//import { FormWithCustomHook } from \"./components/01-useState/CounterWithCustomHook\";\n//import { FormWithCustomHook } from \"./components/02-useEffect/FormWithCustomHook\";\n//import { CounterApp } from \"./components/01-useState/CounterApp\";\n//import HookApp from \"./HookApp\";<\n// import { MultipleCustomHooks } from \"./components/03-examples/MultipleCustomHooks.js\";\n//import { FocusScreen } from \"./components/04-useRef/FocusScreen.js\";\n// import { RealExampleRef } from \"./components/04-useRef/RealExampleRef.js\";\n// import { Layout } from \"./components/05-useLayoutEffect/Layout.js\";\n// import { Memorize } from \"./components/06-memos/Memorize.js\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}